// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: WaitCommand - DRIVE COMMAND

#include "commands/DriveCommand.h"
#include "commands/WaitCommand1.h"
#include "iostream"

/**
 * source code for drive command
 * 
 * @author WAVE Robotics 2826
 */
DriveCommand::DriveCommand(double moveInput, double rotateInput, units::second_t timeout, Drive* drive) : WaitCommand(timeout),
    m_timeout(timeout), m_drive(drive), m_moveInput(moveInput), m_rotateInput(rotateInput)
{
    // Use AddRequirements() here to declare subsystem dependencies
    // eg. AddRequirements(Robot::chassis.get());
    SetName("DriveCommand");
}

// Called just before this Command runs the first time
void DriveCommand::Initialize() {
    WaitCommand::Initialize();
}

// Called repeatedly when this Command is scheduled to run
void DriveCommand::Execute() {
    m_drive->arcadeDrive(m_moveInput, m_rotateInput);
}

// Called once after isFinished returns true
void DriveCommand::End(bool interrupted) {
    WaitCommand::End(interrupted);
    m_drive->arcadeDrive(0.0,0.0);
}

bool DriveCommand::RunsWhenDisabled() const {
    return false;
}