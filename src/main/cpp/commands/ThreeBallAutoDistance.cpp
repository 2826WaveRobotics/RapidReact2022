// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: SequentialCommandGroup - THREE BALL AUTO COMMAND

#include "commands/ThreeBallAutoDistance.h"
#include "frc2/command/ParallelCommandGroup.h"
#include "commands/FrontPunchCommand.h"
#include "commands/SequentialPunch.h"
#include "commands/TransportCommand.h"
#include "commands/DriveCommand.h"
#include "commands/DeployIntakeCommand.h"
#include <iostream>
#include "commands/WaitCommand1.h"
#include <subsystems/Drive.h>
#include <subsystems/Intake.h>
#include <subsystems/Transport.h>
#include <subsystems/Punch.h>
#include "commands/WaitCommand1.h"
#include "commands/DriveHeadingCommand.h"
#include "commands/DriveHeadingDistanceCommand.h"
#include "commands/DriveTurnCommand.h"

/**
 * code for three ball auto using distance
 * INITIAL FRAMEOUT - NO TESTING!!
 * 
 * @author WAVE Robotics 2826
 */
ThreeBallAutoDistance::ThreeBallAutoDistance(Punch* punch, Drive* drive, Intake* intake, Transport* transport) {

    SetName("ThreeBallAutoDistance");
    
    // std::cout << "ENTER ThreeBallAutoDistance()" << std::endl;
    AddCommands(
                   
        frc2::ParallelCommandGroup
        (
            TransportCommand(intake, transport),
            // DeployIntakeCommand(units::seconds_t(1.0), intake),   
            // score ball 1                 
            FrontPunchCommand(punch),         

            frc2::SequentialCommandGroup
            ( 
                WaitCommand1(units::second_t(0.5)),

                // forward to ball 2
                DriveHeadingDistanceCommand(-0.70, 25.0, drive),
                DriveHeadingDistanceCommand(-0.25, 4.0, drive),
                WaitCommand1(units::time::second_t(.5)),

                // turn in place
                DriveTurnCommand(0.5, 110.0f, drive),

                // forward to ball 3
                DriveHeadingDistanceCommand(-0.75, 30.0, drive),
                DriveHeadingDistanceCommand(-0.25, 4.0, drive),
                WaitCommand1(units::time::second_t(0.5)),

                // turn in place
                DriveTurnCommand(0.5, -69.0f, drive),

                // backwards to hub
                DriveHeadingDistanceCommand(0.75, 30.0, drive),
                DriveHeadingDistanceCommand(0.25, 4.0, drive),
                WaitCommand1(units::time::second_t(0.5)),
                // score balls 2 and 3
                SequentialPunch(punch)      
            )          
        )
    );
}

bool ThreeBallAutoDistance::RunsWhenDisabled() const {
    return false;
}